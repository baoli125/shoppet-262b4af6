import { useState, useEffect } from "react";
import HeroCarousel from "@/components/HeroCarousel";
import OnboardingModal from "@/components/OnboardingModal";
import { supabase } from "@/integrations/supabase/client";
import type { User } from "@supabase/supabase-js";

const Index = () => {
  const [user, setUser] = useState<User | null>(null);
  const [showOnboarding, setShowOnboarding] = useState(false);

  useEffect(() => {
    // Check initial session
    supabase.auth.getSession().then(({ data: { session } }) => {
      setUser(session?.user ?? null);
      if (session?.user) {
        checkOnboarding(session.user.id);
      } else {
        // Reset onboarding modal when logged out
        setShowOnboarding(false);
      }
    });

    // Listen for auth changes
    const {
      data: { subscription },
    } = supabase.auth.onAuthStateChange((_event, session) => {
      setUser(session?.user ?? null);
      if (session?.user) {
        checkOnboarding(session.user.id);
      } else {
        // Reset onboarding modal when logged out
        setShowOnboarding(false);
      }
    });

    return () => subscription.unsubscribe();
  }, []);

  const checkOnboarding = async (userId: string) => {
    const { data } = await supabase
      .from("profiles")
      .select("has_completed_onboarding")
      .eq("id", userId)
      .single();
    
    if (data && !data.has_completed_onboarding) {
      setShowOnboarding(true);
    }
  };

  const handleOnboardingComplete = async (isNewUser: boolean) => {
    setShowOnboarding(false);
    
    if (user) {
      // Update profile in database
      const { error } = await supabase
        .from("profiles")
        .update({ 
          is_new_user: isNewUser,
          has_completed_onboarding: true 
        })
        .eq("id", user.id);
      
      if (!error && isNewUser) {
        // Dispatch event to trigger guided tour in App.tsx
        setTimeout(() => {
          window.dispatchEvent(new CustomEvent('startGuidedTour'));
        }, 500);
      }
    }
  };

  return (
    <div className="min-h-screen bg-background">

      <main>
        <HeroCarousel />

        {/* About Section */}
        <section id="about" className="py-20 bg-card">
          <div className="container mx-auto px-4">
            <div className="max-w-4xl mx-auto text-center">
              <h2 className="text-3xl md:text-4xl font-bold mb-6 text-foreground">
                V·ªÅ Shoppet
              </h2>
              <p className="text-lg text-muted-foreground mb-8 leading-relaxed">
                Shoppet l√† n·ªÅn t·∫£ng to√†n di·ªán d√†nh cho ng∆∞·ªùi y√™u th√∫ c∆∞ng t·∫°i Vi·ªát Nam. 
                Ch√∫ng t√¥i k·∫øt h·ª£p c√¥ng ngh·ªá AI ti√™n ti·∫øn v·ªõi ki·∫øn th·ª©c chuy√™n m√¥n v·ªÅ chƒÉm s√≥c th√∫ c∆∞ng 
                ƒë·ªÉ mang ƒë·∫øn tr·∫£i nghi·ªám t·ªët nh·∫•t cho b·∫°n v√† ng∆∞·ªùi b·∫°n b·ªën ch√¢n c·ªßa b·∫°n.
              </p>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mt-12">
                <div className="p-6 bg-background rounded-2xl">
                  <div className="text-4xl mb-4">üõçÔ∏è</div>
                  <h3 className="text-xl font-semibold mb-2 text-foreground">Marketplace</h3>
                  <p className="text-muted-foreground">
                    Mua s·∫Øm s·∫£n ph·∫©m & ƒë·∫∑t d·ªãch v·ª• ch·∫•t l∆∞·ª£ng cao
                  </p>
                </div>
                <div className="p-6 bg-background rounded-2xl">
                  <div className="text-4xl mb-4">ü§ñ</div>
                  <h3 className="text-xl font-semibold mb-2 text-foreground">AI Assistant</h3>
                  <p className="text-muted-foreground">
                    T∆∞ v·∫•n th√¥ng minh 24/7 v·ªÅ s·ª©c kh·ªèe & dinh d∆∞·ª°ng
                  </p>
                </div>
                <div className="p-6 bg-background rounded-2xl">
                  <div className="text-4xl mb-4">üë•</div>
                  <h3 className="text-xl font-semibold mb-2 text-foreground">Community</h3>
                  <p className="text-muted-foreground">
                    C·ªông ƒë·ªìng s√¥i ƒë·ªông v·ªõi h√†ng ngh√¨n th√†nh vi√™n
                  </p>
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* Footer */}
        <footer className="bg-card border-t border-border py-12">
          <div className="container mx-auto px-4">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-8">
              <div>
                <h4 className="text-lg font-semibold mb-4 text-foreground">V·ªÅ Shoppet</h4>
                <p className="text-muted-foreground text-sm">
                  N·ªÅn t·∫£ng chƒÉm s√≥c th√∫ c∆∞ng to√†n di·ªán, k·∫øt h·ª£p c√¥ng ngh·ªá AI v√† c·ªông ƒë·ªìng ng∆∞·ªùi y√™u th√∫ c∆∞ng.
                </p>
              </div>
              <div>
                <h4 className="text-lg font-semibold mb-4 text-foreground">Li√™n h·ªá</h4>
                <ul className="space-y-2 text-sm text-muted-foreground">
                  <li>üìß ShoppetLazyBeo@gmail.com</li>
                  <li>üìû 0900 123 456</li>
                  <li>üìç Vi·ªát Nam</li>
                </ul>
              </div>
              <div>
                <h4 className="text-lg font-semibold mb-4 text-foreground">Theo d√µi</h4>
                <div className="flex gap-4">
                  <a href="#" className="text-muted-foreground hover:text-primary transition-colors">
                    Facebook
                  </a>
                  <a href="#" className="text-muted-foreground hover:text-primary transition-colors">
                    Instagram
                  </a>
                  <a href="#" className="text-muted-foreground hover:text-primary transition-colors">
                    TikTok
                  </a>
                </div>
              </div>
            </div>
            <div className="text-center pt-8 border-t border-border">
              <p className="text-sm text-muted-foreground">
                ¬© 2025 Shoppet. All rights reserved.
              </p>
            </div>
          </div>
        </footer>
      </main>

      {showOnboarding && (
        <OnboardingModal 
          open={showOnboarding}
          onComplete={handleOnboardingComplete}
        />
      )}
    </div>
  );
};

export default Index;
